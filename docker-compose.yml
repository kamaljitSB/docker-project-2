version: "2"
services:
  data_entry:
    build: ./Data_entry
    ports:
      - "8080:8080"
    depends_on:
      - mysql-db
    networks:
      appnetwork:
        ipv4_address: 172.30.0.10

  auth:
    build: ./Auth
    image: auth:latest
    restart: always
    container_name: auth
    ports:
      - "8090:8090"
    depends_on:
      - "data_entry"
    networks:
      appnetwork:
        ipv4_address: 172.30.0.2

  mysql-db:
    build: ./MySQL
    image: mysql:latest
    restart: always
    container_name: mysql-db
    command: --default-authentication-plugin=mysql_native_password
    ports:
      - "3307:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: dbpassword
      MYSQL_DATABASE: data_db
    networks:
      appnetwork:
        ipv4_address: 172.30.0.3

  analytics:
    build: ./Analytics
    image: analytics:latest
    restart: always
    container_name: analytics
    ports:
      - "8100:8100"
    depends_on:
      - "mysql-db"
      - "mongo-db"
    networks:
      appnetwork:
        ipv4_address: 172.30.0.4

  mongo-db:
    build: ./MongoDB
    image: mongo:4.4-bionic
    restart: always
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      appnetwork:
        ipv4_address: 172.30.0.5

  show_result:
    build: ./show_result
    image: show:latest
    restart: always
    container_name: show_result
    ports:
      - "3000:3000"
    depends_on:
      - "mongo-db"
    networks:
      appnetwork:
        ipv4_address: 172.30.0.6

volumes:
  mysql-data:
  mongo-data:
networks:
  appnetwork:
    driver: bridge
    ipam:
      config:
        - subnet: 172.30.0.0/16
          gateway: 172.30.0.1
